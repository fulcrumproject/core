name: Generate and Publish TypeScript Client

env:
  NPM_PACKAGE_NAME: "@fulcrum/core-client"
  NPM_REGISTRY: "https://registry.npmjs.org/"
  NPM_TOKEN: "${{ secrets.NPM_TOKEN }}"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    paths:
      - "docs/openapi.yaml"
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.0.0)"
        required: true
        default: "1.0.0"
      force_publish:
        description: "Force publish even if no changes"
        required: false
        default: "false"

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # Per OIDC con npm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Per avere accesso completo alla history per il versioning

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install OpenAPI Generator
        run: pnpm add -g @openapitools/openapi-generator-cli@latest

      - name: Create client directory
        run: mkdir -p generated-client

      - name: Update config with version
        run: |
          VERSION=${{ github.event.inputs.version || '1.0.0' }}
          jq --arg version "$VERSION" '.npmVersion = $version' openapi-generator-config.json > temp-config.json
          mv temp-config.json openapi-generator-config.json

      - name: Generate TypeScript Client
        run: |
          openapi-generator-cli generate \
            -i docs/openapi.yaml \
            -g typescript-fetch \
            -o ./generated-client \
            -c openapi-generator-config.json

      - name: Setup generated client
        run: |
          cd generated-client
          pnpm install --no-frozen-lockfile
          pnpm run build

      - name: Add README to generated client
        run: |
          cat > generated-client/README.md << 'EOF'
          # Fulcrum Core API Client

          Auto-generated TypeScript client for the Fulcrum Core API.

          ## Installation

          ```bash
          pnpm add @fulcrum/core-client
          ```

          ## Usage

          ```typescript
          import { Configuration, AgentsApi, ParticipantsApi } from '@fulcrum/core-client';

          const config = new Configuration({
            basePath: 'https://api.fulcrum.testudosrl.dev/api/v1',
            accessToken: 'your-oauth-token',
          });

          const agentsApi = new AgentsApi(config);
          const participantsApi = new ParticipantsApi(config);

          // Example usage
          const agents = await agentsApi.getAgents();
          const participants = await participantsApi.getParticipants();
          ```

          ## Authentication

          This client supports OAuth2 Bearer token authentication as defined in the OpenAPI specification.

          ## Generated from

          Generated from OpenAPI specification version: ${{ github.sha }}
          Last updated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
          EOF

      - name: Update package.json with metadata
        run: |
          cd generated-client
          pnpm pkg set description="Auto-generated TypeScript client for Fulcrum Core API"
          pnpm pkg set keywords="fulcrum,api,client,typescript,openapi"
          pnpm pkg set author="Fulcrum Project <https://fulcrumproject.org>"
          pnpm pkg set license="Apache-2.0"
          pnpm pkg set repository.type="git"
          pnpm pkg set repository.url="https://github.com/${{ github.repository }}.git"
          pnpm pkg set repository.directory="generated-client"
          pnpm pkg set bugs.url="https://github.com/${{ github.repository }}/issues"
          pnpm pkg set homepage="https://github.com/${{ github.repository }}#readme"
          pnpm pkg set engines.node=">=18.0.0"
          pnpm pkg set engines.pnpm=">=8.0.0"

      - name: Check for changes
        id: check-changes
        run: |
          if [ "${{ github.event.inputs.force_publish }}" = "true" ]; then
            echo "force_publish=true" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            # Check if there are changes in the generated client
            git add -f generated-client/
            if git diff --staged --quiet; then
              echo "has_changes=false" >> $GITHUB_OUTPUT
            else
              echo "has_changes=true" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run tests on generated client
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          cd generated-client
          pnpm test || echo "No tests configured, skipping..."

      - name: Login to npm
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: Publish to npm
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          cd generated-client
          pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}

      - name: Create Release
        if: steps.check-changes.outputs.has_changes == 'true' && github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: TypeScript Client v${{ github.event.inputs.version }}
          body: |
            Auto-generated TypeScript client for Fulcrum Core API

            ## Changes
            - Regenerated client from latest OpenAPI specification
            - Updated types and interfaces
            - Updated API methods

            ## Installation
            ```bash
            pnpm add @fulcrum/core-client@${{ github.event.inputs.version }}
            ```
          draft: false
          prerelease: false

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -f generated-client/
          git commit -m "feat: regenerate TypeScript client from OpenAPI spec [skip ci]"
          git push

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… TypeScript client has been regenerated from the OpenAPI specification.'
            })

      - name: Upload generated client as artifact
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: typescript-client
          path: generated-client/
          retention-days: 30
