### Test Agent API

### Variables
@baseUrl = http://localhost:3000/api/v1
@adminToken = admin-test-token

### Create a provider for testing
# @name createProvider
POST {{baseUrl}}/participants
Authorization: Bearer {{adminToken}}

{
    "name": "Test Agent Provider",
    "status": "Enabled",
    "countryCode": "US",
    "attributes": {
        "type": ["test"]
    }
}

@providerId = {{createProvider.response.body.$.id}}

### Create a new agent
# @name createAgent
POST {{baseUrl}}/agents
Authorization: Bearer {{adminToken}}

{
    "name": "Test Agent",
    "countryCode": "US",
    "attributes": {
        "environment": ["production"],
        "version": ["1.0.0"]
    },
    "providerId": "{{providerId}}",
    "agentTypeId": "0195c3c6-4c7d-7e3c-b481-f276e17a7bec"
}

@agentId = {{createAgent.response.body.$.id}}

### Create a new agent token
# @name createToken
POST {{baseUrl}}/tokens
Authorization: Bearer {{adminToken}}

{
  "name": "Test Agent Token",
  "role": "agent",
  "expireAt": "{{$datetime iso8601 1 y}}",
  "scopeId": "{{agentId}}"
}

@agentToken = {{createToken.response.body.$.value}}

### Get agent's own information via authenticated endpoint
# @name getAgentMe
GET {{baseUrl}}/agents/me
Authorization: Bearer {{agentToken}}

### Update agent status via authenticated endpoint
PUT {{baseUrl}}/agents/me/status
Authorization: Bearer {{agentToken}}

{
    "status": "Connected"
}

### Get an agent by ID
GET {{baseUrl}}/agents/{{agentId}}
Authorization: Bearer {{agentToken}}

### Get an agent by ID
GET {{baseUrl}}/agents/{{agentId}}
Authorization: Bearer {{adminToken}}

### List all agents
GET {{baseUrl}}/agents
Authorization: Bearer {{adminToken}}

### List agents with filters
GET {{baseUrl}}/agents?status=Connected&countryCode=US
Authorization: Bearer {{adminToken}}

### List agents for specific provider
GET {{baseUrl}}/agents?providerId={{providerId}}
Authorization: Bearer {{adminToken}}

### Update an agent
PATCH {{baseUrl}}/agents/{{agentId}}
Authorization: Bearer {{adminToken}}

{
    "name": "Test Agent Updated",
    "status": "Disconnected",
    "countryCode": "UK",
    "attributes": {
        "environment": ["staging"],
        "version": ["1.1.1"]
    }
}

### Create a new token for the agent
# @name createNewToken
POST {{baseUrl}}/tokens
Authorization: Bearer {{adminToken}}

{
  "name": "New Agent Token",
  "role": "agent",
  "expireAt": "{{$datetime iso8601 1 y}}",
  "scopeId": "{{agentId}}"
}

@newAgentToken = {{createNewToken.response.body.$.value}}

### Test new token by updating status with new token
PUT {{baseUrl}}/agents/me/status
Authorization: Bearer {{newAgentToken}}

{
    "status": "Connected"
}

### Test new token by getting agent information with rotated token
GET {{baseUrl}}/agents/me
Authorization: Bearer {{newAgentToken}}

### Delete an agent
DELETE {{baseUrl}}/agents/{{agentId}}
Authorization: Bearer {{adminToken}}
