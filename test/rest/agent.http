### Test Agent API

### Variables
@baseUrl = http://localhost:3000/api/v1

### Create a provider for testing
# @name createProvider
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "Test Agent Provider",
    "state": "Enabled",
    "countryCode": "US",
    "attributes": {
        "type": ["test"]
    }
}

### Extract provider ID
@providerId = {{createProvider.response.body.$.id}}

### Get an agent type for testing
# @name getAgentTypes
GET {{baseUrl}}/agent-types

### Extract first agent type ID
@agentTypeId = {{getAgentTypes.response.body.$.items[0].id}}

### Create a new agent
# @name createAgent
POST {{baseUrl}}/agents
Content-Type: application/json

{
    "name": "Test Agent",
    "countryCode": "US",
    "attributes": {
        "environment": ["production"],
        "version": ["1.0.0"]
    },
    "providerId": "{{providerId}}",
    "agentTypeId": "{{agentTypeId}}"
}

### Extract agent ID
@agentId = {{createAgent.response.body.$.id}}

### Extract agent token for status update test
@agentToken = {{createAgent.response.body.$.token}}

### Get agent's own information via authenticated endpoint
# @name getAgentMe
GET {{baseUrl}}/agents/me
Content-Type: application/json
Authorization: Bearer {{agentToken}}


### Update agent status via authenticated endpoint
# @name updateAgentStatus
PUT {{baseUrl}}/agents/me/status
Content-Type: application/json
Authorization: Bearer {{agentToken}}

{
    "state": "Connected"
}

### Get an agent by ID
GET {{baseUrl}}/agents/{{agentId}}

### List all agents
GET {{baseUrl}}/agents

### List agents with filters
GET {{baseUrl}}/agents?state=Connected&countryCode=US

### List agents for specific provider
GET {{baseUrl}}/agents?providerId={{providerId}}

### Update an agent
PATCH {{baseUrl}}/agents/{{agentId}}
Content-Type: application/json

{
    "name": "Test Agent Updated",
    "state": "Disconnected",
    "countryCode": "UK",
    "attributes": {
        "environment": ["staging"],
        "version": ["1.1.1"]
    }
}

### Rotate agent token
# @name rotateAgentToken
POST {{baseUrl}}/agents/{{agentId}}/rotate-token
Content-Type: application/json

### Extract new token
@newAgentToken = {{rotateAgentToken.response.body.$.token}}

### Test new token by updating status with rotated token
PUT {{baseUrl}}/agents/me/status
Content-Type: application/json
Authorization: Bearer {{newAgentToken}}

{
    "state": "Connected"
}

### Test new token by getting agent information with rotated token
GET {{baseUrl}}/agents/me
Authorization: Bearer {{newAgentToken}}


### Delete an agent
DELETE {{baseUrl}}/agents/{{agentId}}