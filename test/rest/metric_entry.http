### Test Metric Entry API

### Variables
@baseUrl = http://localhost:3000/api/v1
@adminToken = admin-test-token

### Create a provider for testing
# @name createProvider
POST {{baseUrl}}/participants
Authorization: Bearer {{adminToken}}

{
    "name": "Test Provider",
    "state": "Enabled",
    "countryCode": "US",
    "attributes": {
        "type": ["test"]
    }
}

@providerId = {{createProvider.response.body.$.id}}

### Create an agent
# @name createAgent
POST {{baseUrl}}/agents
Authorization: Bearer {{adminToken}}

{
    "name": "Test Agent",
    "state": "Connected",
    "countryCode": "US",
    "agentTypeId": "0195c3c6-4c7d-7e3c-b481-f276e17a7bec",
    "providerId": "{{providerId}}"
}

@agentId = {{createAgent.response.body.$.id}}


### Create a new agent token
# @name createAgentToken
POST {{baseUrl}}/tokens
Authorization: Bearer {{adminToken}}

{
  "name": "Test Agent Token",
  "role": "agent",
  "expireAt": "{{$datetime iso8601 1 y}}",
  "scopeId": "{{agentId}}"
}

@agentToken = {{createAgentToken.response.body.$.value}}

### Create a new consumer
# @name createConsumer
POST {{baseUrl}}/participants
Authorization: Bearer {{adminToken}}

{
  "name": "Test Consumer",
  "state": "Enabled"
}

@consumerId = {{createConsumer.response.body.$.id}}

### Create a service group
# @name createServiceGroup
POST {{baseUrl}}/service-groups
Authorization: Bearer {{adminToken}}

{
    "name": "Test Job Service Group",
    "consumerId": "{{consumerId}}"
}

@serviceGroupId = {{createServiceGroup.response.body.$.id}}

### Create a new service
# @name createService
POST {{baseUrl}}/services
Authorization: Bearer {{adminToken}}

{
    "name": "Test Service",
    "state": "Created",
    "attributes": {
        "environment": ["production"],
        "region": ["us-west"]
    },
    "agentId": "{{agentId}}",
    "serviceTypeId": "0195c3c8-69e5-7806-9598-8523c01ea54f",
    "groupId": "{{serviceGroupId}}"
}

@serviceId = {{createService.response.body.$.id}}

### Get pending jobs for agent
# @name pendingJobs
GET {{baseUrl}}/jobs/pending
Authorization: Bearer {{agentToken}}

@jobId = {{pendingJobs.response.body.$.[0].id}}

### Claim a job
POST {{baseUrl}}/jobs/{{jobId}}/claim
Authorization: Bearer {{agentToken}}

### Complete a job (requires authentication
# @name completeJob
POST {{baseUrl}}/jobs/{{jobId}}/complete
Authorization: Bearer {{agentToken}}

{
    "resources": {
        "status": "success",
        "details": {
            "duration": "10s",
            "output": "Service started successfully"
        }
    },
    "externalId": "{{$guid}}"
}

### Get a service by ID
# @name getService
GET {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{adminToken}}

@externalId = {{getService.response.body.$.externalId}}

### Create a metric type for testing
# @name createMetricType
POST {{baseUrl}}/metric-types
Authorization: Bearer {{adminToken}}

{
    "name": "test-metric {{$guid}}",
    "entityType": "Service"
}

@metricTypeId = {{createMetricType.response.body.$.id}}
@metricTypeName = {{createMetricType.response.body.$.name}}

### Create a new metric entry using serviceId
# @name createMetricEntry
POST {{baseUrl}}/metric-entries
Authorization: Bearer {{agentToken}}

{
    "serviceId": "{{serviceId}}",
    "resourceId": "test-resource",
    "value": 42.5, 
    "typeName": "{{metricTypeName}}"
}

### Create a new metric entry using externatId
# @name createMetricEntryByName
POST {{baseUrl}}/metric-entries
Authorization: Bearer {{agentToken}}

{
    "externalId": "{{externalId}}",
    "resourceId": "test-resource",
    "value": 78.2, 
    "typeName": "{{metricTypeName}}"
}

### List all metric entries
GET {{baseUrl}}/metric-entries
Authorization: Bearer {{adminToken}}

### List metric entries with pagination
GET {{baseUrl}}/metric-entries?page=1&pageSize=10
Authorization: Bearer {{adminToken}}
