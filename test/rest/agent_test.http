@baseUrl = http://localhost:3000/api/v1
@adminToken = admin-test-token

### Create a provider for testing
# @name createProvider
POST {{baseUrl}}/participants
Authorization: Bearer {{adminToken}}

{
    "name": "Demo Service Provider",
    "status": "Enabled"
}

@providerId = {{createProvider.response.body.$.id}}

### Create an agent with tags
# @name createAgent
POST {{baseUrl}}/agents
Authorization: Bearer {{adminToken}}

{
    "name": "VM Agent",
    "agentTypeId": "0195c3c6-4c7d-7e3c-b481-f276e17a7bec",
    "providerId": "{{providerId}}",
    "tags": ["gpu-{{$timestamp}}", "high-memory", "ssd-storage"]
}

@agentId = {{createAgent.response.body.$.id}}
@uniqueTag = {{createAgent.response.body.$.tags.[0]}}

### Create a new agent token
# @name createAgentToken
POST {{baseUrl}}/tokens
Authorization: Bearer {{adminToken}}

{
  "name": "Test Agent Token",
  "role": "agent",
  "expireAt": "{{$datetime iso8601 1 y}}",
  "scopeId": "{{agentId}}"
}

@agentToken = {{createAgentToken.response.body.$.value}}

### Get agent's own information via authenticated endpoint
# @name getAgentMe
GET {{baseUrl}}/agents/me
Authorization: Bearer {{agentToken}}

### Create a new consumer
# @name createConsumer
POST {{baseUrl}}/participants
Authorization: Bearer {{adminToken}}

{
  "name": "System Integrator",
  "status": "Enabled"
}

@consumerId = {{createConsumer.response.body.$.id}}

### Create a new consumer token
#Â @name createConsumerToken
POST {{baseUrl}}/tokens
Authorization: Bearer {{adminToken}}

{
  "name": "System Integrator Token",
  "role": "participant",
  "expireAt": "{{$datetime iso8601 1 y}}",
  "scopeId": "{{consumerId}}"
}

@consumerToken = {{createConsumerToken.response.body.$.value}}

### Create a service group
# @name createServiceGroup
POST {{baseUrl}}/service-groups
Authorization: Bearer {{consumerToken}}

{
    "name": "Project Demo",
    "consumerId": "{{consumerId}}"
}

@serviceGroupId = {{createServiceGroup.response.body.$.id}}

### Validate service properties before creation
# @name validateServiceProperties
POST {{baseUrl}}/service-types/0195c3c8-69e5-7806-9598-8523c01ea54f/validate
Authorization: Bearer {{consumerToken}}

{
    "properties": {
        "cpu": 4,
        "memory": 512
    }
}

### Create a new service using agent's unique tag for discovery
# @name createService
POST {{baseUrl}}/services
Authorization: Bearer {{consumerToken}}

{
    "name": "Proxmox VM",
    "properties": {
        "cpu": 4,
        "memory": 512
    },
    "agentTags": ["{{uniqueTag}}"],
    "serviceTypeId": "0195c3c8-69e5-7806-9598-8523c01ea54f",
    "groupId": "{{serviceGroupId}}"
}

@serviceId = {{createService.response.body.$.id}}

### Get a service by ID
GET {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

### Update name - Should not trigger a job
PATCH {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

{
    "name": "Proxmox VM - Demo"
}

### Start Service
POST {{baseUrl}}/services/{{serviceId}}/start
Authorization: Bearer {{consumerToken}}

### Get a service by ID
GET {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

### Hot update vm status
PATCH {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

{
    "properties": {
        "cpu": 8,
        "memory": 1024
    }
}

### Get a service by ID
GET {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

### Stop Service
POST {{baseUrl}}/services/{{serviceId}}/stop
Authorization: Bearer {{consumerToken}}

### Get a service by ID
GET {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

### Cold update vm status
PATCH {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

{
    "properties": {
        "cpu": 4,
        "memory": 4096
    }
}

### Retry Service Operation
POST {{baseUrl}}/services/{{serviceId}}/retry
Authorization: Bearer {{consumerToken}}

### Delete a service
DELETE {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

### Get a service by ID
GET {{baseUrl}}/services/{{serviceId}}
Authorization: Bearer {{consumerToken}}

### List all services
GET {{baseUrl}}/services
Authorization: Bearer {{consumerToken}}


