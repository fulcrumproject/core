### Test Service API

### Variables
@baseUrl = http://localhost:3000/api/v1

### Create a provider for testing
# @name createProvider
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "Test Service Provider",
    "state": "Enabled",
    "countryCode": "US",
    "attributes": {
        "type": ["test"]
    }
}

### Extract provider ID
@providerId = {{createProvider.response.body.$.id}}

### Get an agent type for testing
# @name getAgentTypes
GET {{baseUrl}}/agent-types

### Extract first agent type ID
@agentTypeId = {{getAgentTypes.response.body.$.items[0].id}}

### Get a service type for testing
# @name getServiceTypes
GET {{baseUrl}}/service-types

### Extract first agent type ID
@serviceTypeId = {{getServiceTypes.response.body.$.items[0].id}}

### Create an agent
# @name createAgent
POST {{baseUrl}}/agents
Content-Type: application/json

{
    "name": "Test Agent",
    "countryCode": "US",
    "agentTypeId": "{{agentTypeId}}",
    "providerId": "{{providerId}}"
}

### Extract agent ID
@agentId = {{createAgent.response.body.$.id}}

### Extract agent token for status update test
@agentToken = {{createAgent.response.body.$.token}}

### Get agent's own information via authenticated endpoint
# @name getAgentMe
GET {{baseUrl}}/agents/me
Content-Type: application/json
Authorization: Bearer {{agentToken}}

### Create a service group
# @name createServiceGroup
POST {{baseUrl}}/service-groups
Content-Type: application/json

{
    "name": "Test Service Group"
}

### Extract service group ID
@serviceGroupId = {{createServiceGroup.response.body.$.id}}

### Create a new service
# @name createService
POST {{baseUrl}}/services
Content-Type: application/json

{
    "name": "Test Service",
    "attributes": {
        "tier": ["4"]
    },
    "properties": {
        "cpu": 4,
        "memory": 8
    },
    "agentId": "{{agentId}}",
    "serviceTypeId": "{{serviceTypeId}}",
    "groupId": "{{serviceGroupId}}"
}

### Extract service ID
@serviceId = {{createService.response.body.$.id}}

### Get a service by ID
GET {{baseUrl}}/services/{{serviceId}}

### Update vm memory TODO resources not updated - is it correct?
PATCH {{baseUrl}}/services/{{serviceId}}
Content-Type: application/json

{
    "name": "Updated Service"
}

### Start Service
POST {{baseUrl}}/services/{{serviceId}}/start
Content-Type: application/json


### Hot update vm state
PATCH {{baseUrl}}/services/{{serviceId}}
Content-Type: application/json

{
    "properties": {
        "cpu": 4,
        "memory": 12
    }
}

### Stop Service
POST {{baseUrl}}/services/{{serviceId}}/stop
Content-Type: application/json

### Cold update vm state
PATCH {{baseUrl}}/services/{{serviceId}}
Content-Type: application/json

{
    "properties": {
        "cpu": 4,
        "memory": 16
    }
}

### Retry Service Operation
POST {{baseUrl}}/services/{{serviceId}}/retry
Content-Type: application/json

### Delete a service NOT WORKING SEE TODO
DELETE {{baseUrl}}/services/{{serviceId}}

### List all services
GET {{baseUrl}}/services

### List services with filters
GET {{baseUrl}}/services?name=Test Service

### List services with pagination
GET {{baseUrl}}/services?page=1&pageSize=10

