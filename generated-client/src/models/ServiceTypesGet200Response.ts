/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceTypeRes } from './ServiceTypeRes';
import {
    ServiceTypeResFromJSON,
    ServiceTypeResFromJSONTyped,
    ServiceTypeResToJSON,
    ServiceTypeResToJSONTyped,
} from './ServiceTypeRes';

/**
 * 
 * @export
 * @interface ServiceTypesGet200Response
 */
export interface ServiceTypesGet200Response {
    /**
     * 
     * @type {Array<ServiceTypeRes>}
     * @memberof ServiceTypesGet200Response
     */
    items?: Array<ServiceTypeRes>;
    /**
     * 
     * @type {number}
     * @memberof ServiceTypesGet200Response
     */
    totalItems?: number;
    /**
     * 
     * @type {number}
     * @memberof ServiceTypesGet200Response
     */
    totalPages?: number;
    /**
     * 
     * @type {number}
     * @memberof ServiceTypesGet200Response
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof ServiceTypesGet200Response
     */
    page?: number;
}

/**
 * Check if a given object implements the ServiceTypesGet200Response interface.
 */
export function instanceOfServiceTypesGet200Response(value: object): value is ServiceTypesGet200Response {
    return true;
}

export function ServiceTypesGet200ResponseFromJSON(json: any): ServiceTypesGet200Response {
    return ServiceTypesGet200ResponseFromJSONTyped(json, false);
}

export function ServiceTypesGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceTypesGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ServiceTypeResFromJSON)),
        'totalItems': json['totalItems'] == null ? undefined : json['totalItems'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'page': json['page'] == null ? undefined : json['page'],
    };
}

export function ServiceTypesGet200ResponseToJSON(json: any): ServiceTypesGet200Response {
    return ServiceTypesGet200ResponseToJSONTyped(json, false);
}

export function ServiceTypesGet200ResponseToJSONTyped(value?: ServiceTypesGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ServiceTypeResToJSON)),
        'totalItems': value['totalItems'],
        'totalPages': value['totalPages'],
        'pageSize': value['pageSize'],
        'page': value['page'],
    };
}

