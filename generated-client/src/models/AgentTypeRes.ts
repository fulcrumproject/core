/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceTypeRes } from './ServiceTypeRes';
import {
    ServiceTypeResFromJSON,
    ServiceTypeResFromJSONTyped,
    ServiceTypeResToJSON,
    ServiceTypeResToJSONTyped,
} from './ServiceTypeRes';

/**
 * 
 * @export
 * @interface AgentTypeRes
 */
export interface AgentTypeRes {
    /**
     * 
     * @type {string}
     * @memberof AgentTypeRes
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentTypeRes
     */
    name?: string;
    /**
     * Service types that this agent type can provide
     * @type {Array<ServiceTypeRes>}
     * @memberof AgentTypeRes
     */
    serviceTypes?: Array<ServiceTypeRes>;
    /**
     * 
     * @type {Date}
     * @memberof AgentTypeRes
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AgentTypeRes
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the AgentTypeRes interface.
 */
export function instanceOfAgentTypeRes(value: object): value is AgentTypeRes {
    return true;
}

export function AgentTypeResFromJSON(json: any): AgentTypeRes {
    return AgentTypeResFromJSONTyped(json, false);
}

export function AgentTypeResFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentTypeRes {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'serviceTypes': json['serviceTypes'] == null ? undefined : ((json['serviceTypes'] as Array<any>).map(ServiceTypeResFromJSON)),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function AgentTypeResToJSON(json: any): AgentTypeRes {
    return AgentTypeResToJSONTyped(json, false);
}

export function AgentTypeResToJSONTyped(value?: AgentTypeRes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'serviceTypes': value['serviceTypes'] == null ? undefined : ((value['serviceTypes'] as Array<any>).map(ServiceTypeResToJSON)),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

