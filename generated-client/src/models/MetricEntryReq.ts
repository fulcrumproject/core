/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetricEntryReq
 */
export interface MetricEntryReq {
    /**
     * 
     * @type {string}
     * @memberof MetricEntryReq
     */
    serviceId?: string;
    /**
     * External ID of the service associated with this metric
     * @type {string}
     * @memberof MetricEntryReq
     */
    externalId?: string;
    /**
     * 
     * @type {string}
     * @memberof MetricEntryReq
     */
    resourceId: string;
    /**
     * 
     * @type {number}
     * @memberof MetricEntryReq
     */
    value: number;
    /**
     * Name of the metric type
     * @type {string}
     * @memberof MetricEntryReq
     */
    typeName: string;
}

/**
 * Check if a given object implements the MetricEntryReq interface.
 */
export function instanceOfMetricEntryReq(value: object): value is MetricEntryReq {
    if (!('resourceId' in value) || value['resourceId'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('typeName' in value) || value['typeName'] === undefined) return false;
    return true;
}

export function MetricEntryReqFromJSON(json: any): MetricEntryReq {
    return MetricEntryReqFromJSONTyped(json, false);
}

export function MetricEntryReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricEntryReq {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceId': json['serviceId'] == null ? undefined : json['serviceId'],
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'resourceId': json['resourceId'],
        'value': json['value'],
        'typeName': json['typeName'],
    };
}

export function MetricEntryReqToJSON(json: any): MetricEntryReq {
    return MetricEntryReqToJSONTyped(json, false);
}

export function MetricEntryReqToJSONTyped(value?: MetricEntryReq | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'serviceId': value['serviceId'],
        'externalId': value['externalId'],
        'resourceId': value['resourceId'],
        'value': value['value'],
        'typeName': value['typeName'],
    };
}

