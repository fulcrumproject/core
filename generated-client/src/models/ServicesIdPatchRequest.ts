/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceStatus } from './ServiceStatus';
import {
    ServiceStatusFromJSON,
    ServiceStatusFromJSONTyped,
    ServiceStatusToJSON,
    ServiceStatusToJSONTyped,
} from './ServiceStatus';

/**
 * 
 * @export
 * @interface ServicesIdPatchRequest
 */
export interface ServicesIdPatchRequest {
    /**
     * 
     * @type {string}
     * @memberof ServicesIdPatchRequest
     */
    name?: string;
    /**
     * 
     * @type {ServiceStatus}
     * @memberof ServicesIdPatchRequest
     */
    status?: ServiceStatus;
    /**
     * A generic properties.JSON object
     * @type {{ [key: string]: any; }}
     * @memberof ServicesIdPatchRequest
     */
    properties?: { [key: string]: any; };
    /**
     * A generic properties.JSON object
     * @type {{ [key: string]: any; }}
     * @memberof ServicesIdPatchRequest
     */
    resources?: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof ServicesIdPatchRequest
     */
    agentId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServicesIdPatchRequest
     */
    serviceTypeId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServicesIdPatchRequest
     */
    groupId?: string;
}



/**
 * Check if a given object implements the ServicesIdPatchRequest interface.
 */
export function instanceOfServicesIdPatchRequest(value: object): value is ServicesIdPatchRequest {
    return true;
}

export function ServicesIdPatchRequestFromJSON(json: any): ServicesIdPatchRequest {
    return ServicesIdPatchRequestFromJSONTyped(json, false);
}

export function ServicesIdPatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServicesIdPatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : ServiceStatusFromJSON(json['status']),
        'properties': json['properties'] == null ? undefined : json['properties'],
        'resources': json['resources'] == null ? undefined : json['resources'],
        'agentId': json['agentId'] == null ? undefined : json['agentId'],
        'serviceTypeId': json['serviceTypeId'] == null ? undefined : json['serviceTypeId'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
    };
}

export function ServicesIdPatchRequestToJSON(json: any): ServicesIdPatchRequest {
    return ServicesIdPatchRequestToJSONTyped(json, false);
}

export function ServicesIdPatchRequestToJSONTyped(value?: ServicesIdPatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'status': ServiceStatusToJSON(value['status']),
        'properties': value['properties'],
        'resources': value['resources'],
        'agentId': value['agentId'],
        'serviceTypeId': value['serviceTypeId'],
        'groupId': value['groupId'],
    };
}

