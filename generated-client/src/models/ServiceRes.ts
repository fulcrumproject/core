/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentRes } from './AgentRes';
import {
    AgentResFromJSON,
    AgentResFromJSONTyped,
    AgentResToJSON,
    AgentResToJSONTyped,
} from './AgentRes';
import type { ServiceStatus } from './ServiceStatus';
import {
    ServiceStatusFromJSON,
    ServiceStatusFromJSONTyped,
    ServiceStatusToJSON,
    ServiceStatusToJSONTyped,
} from './ServiceStatus';
import type { ServiceAction } from './ServiceAction';
import {
    ServiceActionFromJSON,
    ServiceActionFromJSONTyped,
    ServiceActionToJSON,
    ServiceActionToJSONTyped,
} from './ServiceAction';
import type { ParticipantRes } from './ParticipantRes';
import {
    ParticipantResFromJSON,
    ParticipantResFromJSONTyped,
    ParticipantResToJSON,
    ParticipantResToJSONTyped,
} from './ParticipantRes';
import type { ServiceGroupRes } from './ServiceGroupRes';
import {
    ServiceGroupResFromJSON,
    ServiceGroupResFromJSONTyped,
    ServiceGroupResToJSON,
    ServiceGroupResToJSONTyped,
} from './ServiceGroupRes';
import type { ServiceTypeRes } from './ServiceTypeRes';
import {
    ServiceTypeResFromJSON,
    ServiceTypeResFromJSONTyped,
    ServiceTypeResToJSON,
    ServiceTypeResToJSONTyped,
} from './ServiceTypeRes';

/**
 * 
 * @export
 * @interface ServiceRes
 */
export interface ServiceRes {
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    name?: string;
    /**
     * 
     * @type {ServiceStatus}
     * @memberof ServiceRes
     */
    currentStatus?: ServiceStatus;
    /**
     * 
     * @type {ServiceStatus}
     * @memberof ServiceRes
     */
    targetStatus?: ServiceStatus;
    /**
     * A generic properties.JSON object
     * @type {{ [key: string]: any; }}
     * @memberof ServiceRes
     */
    currentProperties?: { [key: string]: any; };
    /**
     * A generic properties.JSON object
     * @type {{ [key: string]: any; }}
     * @memberof ServiceRes
     */
    targetProperties?: { [key: string]: any; };
    /**
     * 
     * @type {ServiceAction}
     * @memberof ServiceRes
     */
    failedAction?: ServiceAction;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    errorMessage?: string;
    /**
     * 
     * @type {number}
     * @memberof ServiceRes
     */
    retryCount?: number;
    /**
     * A generic properties.JSON object
     * @type {{ [key: string]: any; }}
     * @memberof ServiceRes
     */
    resources?: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    externalId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    agentId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    serviceTypeId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    groupId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    providerId?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceRes
     */
    consumerId?: string;
    /**
     * 
     * @type {AgentRes}
     * @memberof ServiceRes
     */
    agent?: AgentRes;
    /**
     * 
     * @type {ServiceTypeRes}
     * @memberof ServiceRes
     */
    serviceType?: ServiceTypeRes;
    /**
     * 
     * @type {ServiceGroupRes}
     * @memberof ServiceRes
     */
    group?: ServiceGroupRes;
    /**
     * 
     * @type {ParticipantRes}
     * @memberof ServiceRes
     */
    consumerParticipant?: ParticipantRes;
    /**
     * 
     * @type {Date}
     * @memberof ServiceRes
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ServiceRes
     */
    updatedAt?: Date;
}



/**
 * Check if a given object implements the ServiceRes interface.
 */
export function instanceOfServiceRes(value: object): value is ServiceRes {
    return true;
}

export function ServiceResFromJSON(json: any): ServiceRes {
    return ServiceResFromJSONTyped(json, false);
}

export function ServiceResFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceRes {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'currentStatus': json['currentStatus'] == null ? undefined : ServiceStatusFromJSON(json['currentStatus']),
        'targetStatus': json['targetStatus'] == null ? undefined : ServiceStatusFromJSON(json['targetStatus']),
        'currentProperties': json['currentProperties'] == null ? undefined : json['currentProperties'],
        'targetProperties': json['targetProperties'] == null ? undefined : json['targetProperties'],
        'failedAction': json['failedAction'] == null ? undefined : ServiceActionFromJSON(json['failedAction']),
        'errorMessage': json['errorMessage'] == null ? undefined : json['errorMessage'],
        'retryCount': json['retryCount'] == null ? undefined : json['retryCount'],
        'resources': json['resources'] == null ? undefined : json['resources'],
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'agentId': json['agentId'] == null ? undefined : json['agentId'],
        'serviceTypeId': json['serviceTypeId'] == null ? undefined : json['serviceTypeId'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
        'providerId': json['providerId'] == null ? undefined : json['providerId'],
        'consumerId': json['consumerId'] == null ? undefined : json['consumerId'],
        'agent': json['agent'] == null ? undefined : AgentResFromJSON(json['agent']),
        'serviceType': json['serviceType'] == null ? undefined : ServiceTypeResFromJSON(json['serviceType']),
        'group': json['group'] == null ? undefined : ServiceGroupResFromJSON(json['group']),
        'consumerParticipant': json['consumerParticipant'] == null ? undefined : ParticipantResFromJSON(json['consumerParticipant']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function ServiceResToJSON(json: any): ServiceRes {
    return ServiceResToJSONTyped(json, false);
}

export function ServiceResToJSONTyped(value?: ServiceRes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'currentStatus': ServiceStatusToJSON(value['currentStatus']),
        'targetStatus': ServiceStatusToJSON(value['targetStatus']),
        'currentProperties': value['currentProperties'],
        'targetProperties': value['targetProperties'],
        'failedAction': ServiceActionToJSON(value['failedAction']),
        'errorMessage': value['errorMessage'],
        'retryCount': value['retryCount'],
        'resources': value['resources'],
        'externalId': value['externalId'],
        'agentId': value['agentId'],
        'serviceTypeId': value['serviceTypeId'],
        'groupId': value['groupId'],
        'providerId': value['providerId'],
        'consumerId': value['consumerId'],
        'agent': AgentResToJSON(value['agent']),
        'serviceType': ServiceTypeResToJSON(value['serviceType']),
        'group': ServiceGroupResToJSON(value['group']),
        'consumerParticipant': ParticipantResToJSON(value['consumerParticipant']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

