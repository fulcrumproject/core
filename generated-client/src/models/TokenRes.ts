/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthRole } from './AuthRole';
import {
    AuthRoleFromJSON,
    AuthRoleFromJSONTyped,
    AuthRoleToJSON,
    AuthRoleToJSONTyped,
} from './AuthRole';

/**
 * 
 * @export
 * @interface TokenRes
 */
export interface TokenRes {
    /**
     * 
     * @type {string}
     * @memberof TokenRes
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRes
     */
    name?: string;
    /**
     * 
     * @type {AuthRole}
     * @memberof TokenRes
     */
    role?: AuthRole;
    /**
     * 
     * @type {Date}
     * @memberof TokenRes
     */
    expireAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TokenRes
     */
    scopeId?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRes
     */
    agentId?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRes
     */
    participantId?: string;
    /**
     * 
     * @type {Date}
     * @memberof TokenRes
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TokenRes
     */
    updatedAt?: Date;
    /**
     * Plain token value. Only returned during token creation or regeneration
     * @type {string}
     * @memberof TokenRes
     */
    value?: string;
}



/**
 * Check if a given object implements the TokenRes interface.
 */
export function instanceOfTokenRes(value: object): value is TokenRes {
    return true;
}

export function TokenResFromJSON(json: any): TokenRes {
    return TokenResFromJSONTyped(json, false);
}

export function TokenResFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenRes {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'role': json['role'] == null ? undefined : AuthRoleFromJSON(json['role']),
        'expireAt': json['expireAt'] == null ? undefined : (new Date(json['expireAt'])),
        'scopeId': json['scopeId'] == null ? undefined : json['scopeId'],
        'agentId': json['agentId'] == null ? undefined : json['agentId'],
        'participantId': json['participantId'] == null ? undefined : json['participantId'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function TokenResToJSON(json: any): TokenRes {
    return TokenResToJSONTyped(json, false);
}

export function TokenResToJSONTyped(value?: TokenRes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'role': AuthRoleToJSON(value['role']),
        'expireAt': value['expireAt'] == null ? undefined : ((value['expireAt']).toISOString()),
        'scopeId': value['scopeId'],
        'agentId': value['agentId'],
        'participantId': value['participantId'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'value': value['value'],
    };
}

