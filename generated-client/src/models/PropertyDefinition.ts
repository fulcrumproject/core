/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValidatorDefinition } from './ValidatorDefinition';
import {
    ValidatorDefinitionFromJSON,
    ValidatorDefinitionFromJSONTyped,
    ValidatorDefinitionToJSON,
    ValidatorDefinitionToJSONTyped,
} from './ValidatorDefinition';

/**
 * 
 * @export
 * @interface PropertyDefinition
 */
export interface PropertyDefinition {
    /**
     * The data type of the property
     * @type {string}
     * @memberof PropertyDefinition
     */
    type?: PropertyDefinitionTypeEnum;
    /**
     * Human-readable label for the property
     * @type {string}
     * @memberof PropertyDefinition
     */
    label?: string;
    /**
     * Whether the property is required
     * @type {boolean}
     * @memberof PropertyDefinition
     */
    required?: boolean;
    /**
     * 
     * @type {any}
     * @memberof PropertyDefinition
     */
    _default?: any | null;
    /**
     * Array of validation rules
     * @type {Array<ValidatorDefinition>}
     * @memberof PropertyDefinition
     */
    validators?: Array<ValidatorDefinition>;
    /**
     * Nested properties for object types
     * @type {{ [key: string]: PropertyDefinition; }}
     * @memberof PropertyDefinition
     */
    properties?: { [key: string]: PropertyDefinition; };
    /**
     * Schema for array items
     * @type {PropertyDefinition}
     * @memberof PropertyDefinition
     */
    items?: PropertyDefinition;
}

/**
* @export
* @enum {string}
*/
export enum PropertyDefinitionTypeEnum {
    STRING = 'string',
    INTEGER = 'integer',
    NUMBER = 'number',
    BOOLEAN = 'boolean',
    OBJECT = 'object',
    ARRAY = 'array'
}


/**
 * Check if a given object implements the PropertyDefinition interface.
 */
export function instanceOfPropertyDefinition(value: object): value is PropertyDefinition {
    return true;
}

export function PropertyDefinitionFromJSON(json: any): PropertyDefinition {
    return PropertyDefinitionFromJSONTyped(json, false);
}

export function PropertyDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'label': json['label'] == null ? undefined : json['label'],
        'required': json['required'] == null ? undefined : json['required'],
        '_default': json['default'] == null ? undefined : json['default'],
        'validators': json['validators'] == null ? undefined : ((json['validators'] as Array<any>).map(ValidatorDefinitionFromJSON)),
        'properties': json['properties'] == null ? undefined : (mapValues(json['properties'], PropertyDefinitionFromJSON)),
        'items': json['items'] == null ? undefined : PropertyDefinitionFromJSON(json['items']),
    };
}

export function PropertyDefinitionToJSON(json: any): PropertyDefinition {
    return PropertyDefinitionToJSONTyped(json, false);
}

export function PropertyDefinitionToJSONTyped(value?: PropertyDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'label': value['label'],
        'required': value['required'],
        'default': value['_default'],
        'validators': value['validators'] == null ? undefined : ((value['validators'] as Array<any>).map(ValidatorDefinitionToJSON)),
        'properties': value['properties'] == null ? undefined : (mapValues(value['properties'], PropertyDefinitionToJSON)),
        'items': PropertyDefinitionToJSON(value['items']),
    };
}

