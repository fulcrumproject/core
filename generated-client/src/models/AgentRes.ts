/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentStatus } from './AgentStatus';
import {
    AgentStatusFromJSON,
    AgentStatusFromJSONTyped,
    AgentStatusToJSON,
    AgentStatusToJSONTyped,
} from './AgentStatus';
import type { AgentTypeRes } from './AgentTypeRes';
import {
    AgentTypeResFromJSON,
    AgentTypeResFromJSONTyped,
    AgentTypeResToJSON,
    AgentTypeResToJSONTyped,
} from './AgentTypeRes';
import type { ParticipantRes } from './ParticipantRes';
import {
    ParticipantResFromJSON,
    ParticipantResFromJSONTyped,
    ParticipantResToJSON,
    ParticipantResToJSONTyped,
} from './ParticipantRes';

/**
 * 
 * @export
 * @interface AgentRes
 */
export interface AgentRes {
    /**
     * 
     * @type {string}
     * @memberof AgentRes
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentRes
     */
    name?: string;
    /**
     * 
     * @type {AgentStatus}
     * @memberof AgentRes
     */
    status?: AgentStatus;
    /**
     * 
     * @type {string}
     * @memberof AgentRes
     */
    providerId?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentRes
     */
    agentTypeId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgentRes
     */
    tags?: Array<string>;
    /**
     * 
     * @type {ParticipantRes}
     * @memberof AgentRes
     */
    participant?: ParticipantRes;
    /**
     * 
     * @type {AgentTypeRes}
     * @memberof AgentRes
     */
    agentType?: AgentTypeRes;
    /**
     * 
     * @type {Date}
     * @memberof AgentRes
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AgentRes
     */
    updatedAt?: Date;
}



/**
 * Check if a given object implements the AgentRes interface.
 */
export function instanceOfAgentRes(value: object): value is AgentRes {
    return true;
}

export function AgentResFromJSON(json: any): AgentRes {
    return AgentResFromJSONTyped(json, false);
}

export function AgentResFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentRes {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : AgentStatusFromJSON(json['status']),
        'providerId': json['providerId'] == null ? undefined : json['providerId'],
        'agentTypeId': json['agentTypeId'] == null ? undefined : json['agentTypeId'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'participant': json['participant'] == null ? undefined : ParticipantResFromJSON(json['participant']),
        'agentType': json['agentType'] == null ? undefined : AgentTypeResFromJSON(json['agentType']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function AgentResToJSON(json: any): AgentRes {
    return AgentResToJSONTyped(json, false);
}

export function AgentResToJSONTyped(value?: AgentRes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'status': AgentStatusToJSON(value['status']),
        'providerId': value['providerId'],
        'agentTypeId': value['agentTypeId'],
        'tags': value['tags'],
        'participant': ParticipantResToJSON(value['participant']),
        'agentType': AgentTypeResToJSON(value['agentType']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

