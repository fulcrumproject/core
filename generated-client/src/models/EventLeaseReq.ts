/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventLeaseReq
 */
export interface EventLeaseReq {
    /**
     * Unique identifier for the subscriber system
     * @type {string}
     * @memberof EventLeaseReq
     */
    subscriberId: string;
    /**
     * Unique identifier for the consuming instance
     * @type {string}
     * @memberof EventLeaseReq
     */
    instanceId: string;
    /**
     * Lease duration in seconds (default 300, max 3600, min 30)
     * @type {number}
     * @memberof EventLeaseReq
     */
    leaseDurationSeconds?: number;
    /**
     * Maximum number of events to fetch (default 100, max 1000, min 1)
     * @type {number}
     * @memberof EventLeaseReq
     */
    limit?: number;
}

/**
 * Check if a given object implements the EventLeaseReq interface.
 */
export function instanceOfEventLeaseReq(value: object): value is EventLeaseReq {
    if (!('subscriberId' in value) || value['subscriberId'] === undefined) return false;
    if (!('instanceId' in value) || value['instanceId'] === undefined) return false;
    return true;
}

export function EventLeaseReqFromJSON(json: any): EventLeaseReq {
    return EventLeaseReqFromJSONTyped(json, false);
}

export function EventLeaseReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventLeaseReq {
    if (json == null) {
        return json;
    }
    return {
        
        'subscriberId': json['subscriberId'],
        'instanceId': json['instanceId'],
        'leaseDurationSeconds': json['leaseDurationSeconds'] == null ? undefined : json['leaseDurationSeconds'],
        'limit': json['limit'] == null ? undefined : json['limit'],
    };
}

export function EventLeaseReqToJSON(json: any): EventLeaseReq {
    return EventLeaseReqToJSONTyped(json, false);
}

export function EventLeaseReqToJSONTyped(value?: EventLeaseReq | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subscriberId': value['subscriberId'],
        'instanceId': value['instanceId'],
        'leaseDurationSeconds': value['leaseDurationSeconds'],
        'limit': value['limit'],
    };
}

