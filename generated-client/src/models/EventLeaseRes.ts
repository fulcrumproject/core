/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventRes } from './EventRes';
import {
    EventResFromJSON,
    EventResFromJSONTyped,
    EventResToJSON,
    EventResToJSONTyped,
} from './EventRes';

/**
 * 
 * @export
 * @interface EventLeaseRes
 */
export interface EventLeaseRes {
    /**
     * Array of events fetched in chronological order
     * @type {Array<EventRes>}
     * @memberof EventLeaseRes
     */
    events?: Array<EventRes>;
    /**
     * When the current lease expires
     * @type {Date}
     * @memberof EventLeaseRes
     */
    leaseExpiresAt?: Date;
    /**
     * Last event sequence number processed by this subscriber
     * @type {number}
     * @memberof EventLeaseRes
     */
    lastEventSequenceProcessed?: number;
}

/**
 * Check if a given object implements the EventLeaseRes interface.
 */
export function instanceOfEventLeaseRes(value: object): value is EventLeaseRes {
    return true;
}

export function EventLeaseResFromJSON(json: any): EventLeaseRes {
    return EventLeaseResFromJSONTyped(json, false);
}

export function EventLeaseResFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventLeaseRes {
    if (json == null) {
        return json;
    }
    return {
        
        'events': json['events'] == null ? undefined : ((json['events'] as Array<any>).map(EventResFromJSON)),
        'leaseExpiresAt': json['leaseExpiresAt'] == null ? undefined : (new Date(json['leaseExpiresAt'])),
        'lastEventSequenceProcessed': json['lastEventSequenceProcessed'] == null ? undefined : json['lastEventSequenceProcessed'],
    };
}

export function EventLeaseResToJSON(json: any): EventLeaseRes {
    return EventLeaseResToJSONTyped(json, false);
}

export function EventLeaseResToJSONTyped(value?: EventLeaseRes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'events': value['events'] == null ? undefined : ((value['events'] as Array<any>).map(EventResToJSON)),
        'leaseExpiresAt': value['leaseExpiresAt'] == null ? undefined : ((value['leaseExpiresAt']).toISOString()),
        'lastEventSequenceProcessed': value['lastEventSequenceProcessed'],
    };
}

