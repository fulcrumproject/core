/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentStatus } from './AgentStatus';
import {
    AgentStatusFromJSON,
    AgentStatusFromJSONTyped,
    AgentStatusToJSON,
    AgentStatusToJSONTyped,
} from './AgentStatus';

/**
 * 
 * @export
 * @interface AgentReq
 */
export interface AgentReq {
    /**
     * 
     * @type {string}
     * @memberof AgentReq
     */
    name: string;
    /**
     * 
     * @type {AgentStatus}
     * @memberof AgentReq
     */
    status: AgentStatus;
    /**
     * A generic properties.JSON object
     * @type {{ [key: string]: any; }}
     * @memberof AgentReq
     */
    properties?: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof AgentReq
     */
    participantId: string;
    /**
     * 
     * @type {string}
     * @memberof AgentReq
     */
    agentTypeId: string;
}



/**
 * Check if a given object implements the AgentReq interface.
 */
export function instanceOfAgentReq(value: object): value is AgentReq {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('participantId' in value) || value['participantId'] === undefined) return false;
    if (!('agentTypeId' in value) || value['agentTypeId'] === undefined) return false;
    return true;
}

export function AgentReqFromJSON(json: any): AgentReq {
    return AgentReqFromJSONTyped(json, false);
}

export function AgentReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentReq {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'status': AgentStatusFromJSON(json['status']),
        'properties': json['properties'] == null ? undefined : json['properties'],
        'participantId': json['participantId'],
        'agentTypeId': json['agentTypeId'],
    };
}

export function AgentReqToJSON(json: any): AgentReq {
    return AgentReqToJSONTyped(json, false);
}

export function AgentReqToJSONTyped(value?: AgentReq | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'status': AgentStatusToJSON(value['status']),
        'properties': value['properties'],
        'participantId': value['participantId'],
        'agentTypeId': value['agentTypeId'],
    };
}

