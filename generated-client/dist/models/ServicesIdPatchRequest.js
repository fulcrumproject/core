"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfServicesIdPatchRequest = instanceOfServicesIdPatchRequest;
exports.ServicesIdPatchRequestFromJSON = ServicesIdPatchRequestFromJSON;
exports.ServicesIdPatchRequestFromJSONTyped = ServicesIdPatchRequestFromJSONTyped;
exports.ServicesIdPatchRequestToJSON = ServicesIdPatchRequestToJSON;
exports.ServicesIdPatchRequestToJSONTyped = ServicesIdPatchRequestToJSONTyped;
const ServiceStatus_1 = require("./ServiceStatus");
/**
 * Check if a given object implements the ServicesIdPatchRequest interface.
 */
function instanceOfServicesIdPatchRequest(value) {
    return true;
}
function ServicesIdPatchRequestFromJSON(json) {
    return ServicesIdPatchRequestFromJSONTyped(json, false);
}
function ServicesIdPatchRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : (0, ServiceStatus_1.ServiceStatusFromJSON)(json['status']),
        'properties': json['properties'] == null ? undefined : json['properties'],
        'resources': json['resources'] == null ? undefined : json['resources'],
        'agentId': json['agentId'] == null ? undefined : json['agentId'],
        'serviceTypeId': json['serviceTypeId'] == null ? undefined : json['serviceTypeId'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
    };
}
function ServicesIdPatchRequestToJSON(json) {
    return ServicesIdPatchRequestToJSONTyped(json, false);
}
function ServicesIdPatchRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'status': (0, ServiceStatus_1.ServiceStatusToJSON)(value['status']),
        'properties': value['properties'],
        'resources': value['resources'],
        'agentId': value['agentId'],
        'serviceTypeId': value['serviceTypeId'],
        'groupId': value['groupId'],
    };
}
