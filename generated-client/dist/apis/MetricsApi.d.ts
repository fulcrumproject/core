/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { MetricEntriesGet200Response, MetricEntryReq, MetricEntryRes, MetricTypeReq, MetricTypeRes, MetricTypesGet200Response, MetricTypesIdPatchRequest } from '../models/index';
export interface MetricEntriesGetRequest {
    page?: number;
    pageSize?: number;
}
export interface MetricEntriesPostRequest {
    metricEntryReq: MetricEntryReq | null;
}
export interface MetricTypesGetRequest {
    page?: number;
    pageSize?: number;
}
export interface MetricTypesIdDeleteRequest {
    id: string;
}
export interface MetricTypesIdGetRequest {
    id: string;
}
export interface MetricTypesIdPatchOperationRequest {
    id: string;
    metricTypesIdPatchRequest: MetricTypesIdPatchRequest;
}
export interface MetricTypesPostRequest {
    metricTypeReq: MetricTypeReq;
}
/**
 * MetricsApi - interface
 *
 * @export
 * @interface MetricsApiInterface
 */
export interface MetricsApiInterface {
    /**
     * Retrieves a paginated list of metric entries
     * @summary List metric entries
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricEntriesGetRaw(requestParameters: MetricEntriesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricEntriesGet200Response>>;
    /**
     * Retrieves a paginated list of metric entries
     * List metric entries
     */
    metricEntriesGet(requestParameters: MetricEntriesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricEntriesGet200Response>;
    /**
     * Creates a new metric entry
     * @summary Create a metric entry
     * @param {MetricEntryReq} metricEntryReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricEntriesPostRaw(requestParameters: MetricEntriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricEntryRes>>;
    /**
     * Creates a new metric entry
     * Create a metric entry
     */
    metricEntriesPost(requestParameters: MetricEntriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricEntryRes>;
    /**
     * Retrieves a paginated list of metric types
     * @summary List metric types
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricTypesGetRaw(requestParameters: MetricTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypesGet200Response>>;
    /**
     * Retrieves a paginated list of metric types
     * List metric types
     */
    metricTypesGet(requestParameters: MetricTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypesGet200Response>;
    /**
     * Deletes a metric type by ID
     * @summary Delete a metric type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricTypesIdDeleteRaw(requestParameters: MetricTypesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a metric type by ID
     * Delete a metric type
     */
    metricTypesIdDelete(requestParameters: MetricTypesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific metric type by ID
     * @summary Get a metric type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricTypesIdGetRaw(requestParameters: MetricTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypeRes>>;
    /**
     * Retrieves a specific metric type by ID
     * Get a metric type
     */
    metricTypesIdGet(requestParameters: MetricTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypeRes>;
    /**
     * Updates an existing metric type
     * @summary Update a metric type
     * @param {string} id
     * @param {MetricTypesIdPatchRequest} metricTypesIdPatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricTypesIdPatchRaw(requestParameters: MetricTypesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypeRes>>;
    /**
     * Updates an existing metric type
     * Update a metric type
     */
    metricTypesIdPatch(requestParameters: MetricTypesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypeRes>;
    /**
     * Creates a new metric type
     * @summary Create a metric type
     * @param {MetricTypeReq} metricTypeReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApiInterface
     */
    metricTypesPostRaw(requestParameters: MetricTypesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypeRes>>;
    /**
     * Creates a new metric type
     * Create a metric type
     */
    metricTypesPost(requestParameters: MetricTypesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypeRes>;
}
/**
 *
 */
export declare class MetricsApi extends runtime.BaseAPI implements MetricsApiInterface {
    /**
     * Retrieves a paginated list of metric entries
     * List metric entries
     */
    metricEntriesGetRaw(requestParameters: MetricEntriesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricEntriesGet200Response>>;
    /**
     * Retrieves a paginated list of metric entries
     * List metric entries
     */
    metricEntriesGet(requestParameters?: MetricEntriesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricEntriesGet200Response>;
    /**
     * Creates a new metric entry
     * Create a metric entry
     */
    metricEntriesPostRaw(requestParameters: MetricEntriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricEntryRes>>;
    /**
     * Creates a new metric entry
     * Create a metric entry
     */
    metricEntriesPost(requestParameters: MetricEntriesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricEntryRes>;
    /**
     * Retrieves a paginated list of metric types
     * List metric types
     */
    metricTypesGetRaw(requestParameters: MetricTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypesGet200Response>>;
    /**
     * Retrieves a paginated list of metric types
     * List metric types
     */
    metricTypesGet(requestParameters?: MetricTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypesGet200Response>;
    /**
     * Deletes a metric type by ID
     * Delete a metric type
     */
    metricTypesIdDeleteRaw(requestParameters: MetricTypesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a metric type by ID
     * Delete a metric type
     */
    metricTypesIdDelete(requestParameters: MetricTypesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific metric type by ID
     * Get a metric type
     */
    metricTypesIdGetRaw(requestParameters: MetricTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypeRes>>;
    /**
     * Retrieves a specific metric type by ID
     * Get a metric type
     */
    metricTypesIdGet(requestParameters: MetricTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypeRes>;
    /**
     * Updates an existing metric type
     * Update a metric type
     */
    metricTypesIdPatchRaw(requestParameters: MetricTypesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypeRes>>;
    /**
     * Updates an existing metric type
     * Update a metric type
     */
    metricTypesIdPatch(requestParameters: MetricTypesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypeRes>;
    /**
     * Creates a new metric type
     * Create a metric type
     */
    metricTypesPostRaw(requestParameters: MetricTypesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MetricTypeRes>>;
    /**
     * Creates a new metric type
     * Create a metric type
     */
    metricTypesPost(requestParameters: MetricTypesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MetricTypeRes>;
}
