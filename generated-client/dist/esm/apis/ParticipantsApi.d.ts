/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ParticipantReq, ParticipantRes, ParticipantsGet200Response } from '../models/index';
export interface ParticipantsGetRequest {
    page?: number;
    pageSize?: number;
}
export interface ParticipantsIdDeleteRequest {
    id: string;
}
export interface ParticipantsIdGetRequest {
    id: string;
}
export interface ParticipantsIdPatchRequest {
    id: string;
    participantReq: ParticipantReq;
}
export interface ParticipantsPostRequest {
    participantReq: ParticipantReq;
}
/**
 * ParticipantsApi - interface
 *
 * @export
 * @interface ParticipantsApiInterface
 */
export interface ParticipantsApiInterface {
    /**
     * Retrieves a paginated list of participants
     * @summary List participants
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParticipantsApiInterface
     */
    participantsGetRaw(requestParameters: ParticipantsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantsGet200Response>>;
    /**
     * Retrieves a paginated list of participants
     * List participants
     */
    participantsGet(requestParameters: ParticipantsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantsGet200Response>;
    /**
     * Deletes a participant by ID
     * @summary Delete a participant
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParticipantsApiInterface
     */
    participantsIdDeleteRaw(requestParameters: ParticipantsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a participant by ID
     * Delete a participant
     */
    participantsIdDelete(requestParameters: ParticipantsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific participant by ID
     * @summary Get a participant
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParticipantsApiInterface
     */
    participantsIdGetRaw(requestParameters: ParticipantsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantRes>>;
    /**
     * Retrieves a specific participant by ID
     * Get a participant
     */
    participantsIdGet(requestParameters: ParticipantsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantRes>;
    /**
     * Updates an existing participant
     * @summary Update a participant
     * @param {string} id
     * @param {ParticipantReq} participantReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParticipantsApiInterface
     */
    participantsIdPatchRaw(requestParameters: ParticipantsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantRes>>;
    /**
     * Updates an existing participant
     * Update a participant
     */
    participantsIdPatch(requestParameters: ParticipantsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantRes>;
    /**
     * Creates a new participant
     * @summary Create a participant
     * @param {ParticipantReq} participantReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParticipantsApiInterface
     */
    participantsPostRaw(requestParameters: ParticipantsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantRes>>;
    /**
     * Creates a new participant
     * Create a participant
     */
    participantsPost(requestParameters: ParticipantsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantRes>;
}
/**
 *
 */
export declare class ParticipantsApi extends runtime.BaseAPI implements ParticipantsApiInterface {
    /**
     * Retrieves a paginated list of participants
     * List participants
     */
    participantsGetRaw(requestParameters: ParticipantsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantsGet200Response>>;
    /**
     * Retrieves a paginated list of participants
     * List participants
     */
    participantsGet(requestParameters?: ParticipantsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantsGet200Response>;
    /**
     * Deletes a participant by ID
     * Delete a participant
     */
    participantsIdDeleteRaw(requestParameters: ParticipantsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a participant by ID
     * Delete a participant
     */
    participantsIdDelete(requestParameters: ParticipantsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific participant by ID
     * Get a participant
     */
    participantsIdGetRaw(requestParameters: ParticipantsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantRes>>;
    /**
     * Retrieves a specific participant by ID
     * Get a participant
     */
    participantsIdGet(requestParameters: ParticipantsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantRes>;
    /**
     * Updates an existing participant
     * Update a participant
     */
    participantsIdPatchRaw(requestParameters: ParticipantsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantRes>>;
    /**
     * Updates an existing participant
     * Update a participant
     */
    participantsIdPatch(requestParameters: ParticipantsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantRes>;
    /**
     * Creates a new participant
     * Create a participant
     */
    participantsPostRaw(requestParameters: ParticipantsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParticipantRes>>;
    /**
     * Creates a new participant
     * Create a participant
     */
    participantsPost(requestParameters: ParticipantsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParticipantRes>;
}
