/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CompleteJobReq, FailJobReq, JobRes, JobsGet200Response } from '../models/index';
export interface JobsGetRequest {
    page?: number;
    pageSize?: number;
}
export interface JobsIdClaimPostRequest {
    id: string;
}
export interface JobsIdCompletePostRequest {
    id: string;
    completeJobReq: CompleteJobReq;
}
export interface JobsIdFailPostRequest {
    id: string;
    failJobReq: FailJobReq;
}
export interface JobsIdGetRequest {
    id: string;
}
export interface JobsPendingGetRequest {
    limit?: number;
}
/**
 * JobsApi - interface
 *
 * @export
 * @interface JobsApiInterface
 */
export interface JobsApiInterface {
    /**
     * Retrieves a paginated list of jobs (admin route)
     * @summary List jobs
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobsApiInterface
     */
    jobsGetRaw(requestParameters: JobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobsGet200Response>>;
    /**
     * Retrieves a paginated list of jobs (admin route)
     * List jobs
     */
    jobsGet(requestParameters: JobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobsGet200Response>;
    /**
     * Claims a job for processing by the authenticated agent
     * @summary Claim a job
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobsApiInterface
     */
    jobsIdClaimPostRaw(requestParameters: JobsIdClaimPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Claims a job for processing by the authenticated agent
     * Claim a job
     */
    jobsIdClaimPost(requestParameters: JobsIdClaimPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Marks a job as completed with results
     * @summary Complete a job
     * @param {string} id
     * @param {CompleteJobReq} completeJobReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobsApiInterface
     */
    jobsIdCompletePostRaw(requestParameters: JobsIdCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Marks a job as completed with results
     * Complete a job
     */
    jobsIdCompletePost(requestParameters: JobsIdCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Marks a job as failed with an error message
     * @summary Fail a job
     * @param {string} id
     * @param {FailJobReq} failJobReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobsApiInterface
     */
    jobsIdFailPostRaw(requestParameters: JobsIdFailPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Marks a job as failed with an error message
     * Fail a job
     */
    jobsIdFailPost(requestParameters: JobsIdFailPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific job by ID (admin route)
     * @summary Get a job
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobsApiInterface
     */
    jobsIdGetRaw(requestParameters: JobsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobRes>>;
    /**
     * Retrieves a specific job by ID (admin route)
     * Get a job
     */
    jobsIdGet(requestParameters: JobsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobRes>;
    /**
     * Retrieves a list of pending jobs for the authenticated agent
     * @summary Get pending jobs
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobsApiInterface
     */
    jobsPendingGetRaw(requestParameters: JobsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<JobRes>>>;
    /**
     * Retrieves a list of pending jobs for the authenticated agent
     * Get pending jobs
     */
    jobsPendingGet(requestParameters: JobsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<JobRes>>;
}
/**
 *
 */
export declare class JobsApi extends runtime.BaseAPI implements JobsApiInterface {
    /**
     * Retrieves a paginated list of jobs (admin route)
     * List jobs
     */
    jobsGetRaw(requestParameters: JobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobsGet200Response>>;
    /**
     * Retrieves a paginated list of jobs (admin route)
     * List jobs
     */
    jobsGet(requestParameters?: JobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobsGet200Response>;
    /**
     * Claims a job for processing by the authenticated agent
     * Claim a job
     */
    jobsIdClaimPostRaw(requestParameters: JobsIdClaimPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Claims a job for processing by the authenticated agent
     * Claim a job
     */
    jobsIdClaimPost(requestParameters: JobsIdClaimPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Marks a job as completed with results
     * Complete a job
     */
    jobsIdCompletePostRaw(requestParameters: JobsIdCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Marks a job as completed with results
     * Complete a job
     */
    jobsIdCompletePost(requestParameters: JobsIdCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Marks a job as failed with an error message
     * Fail a job
     */
    jobsIdFailPostRaw(requestParameters: JobsIdFailPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Marks a job as failed with an error message
     * Fail a job
     */
    jobsIdFailPost(requestParameters: JobsIdFailPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific job by ID (admin route)
     * Get a job
     */
    jobsIdGetRaw(requestParameters: JobsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobRes>>;
    /**
     * Retrieves a specific job by ID (admin route)
     * Get a job
     */
    jobsIdGet(requestParameters: JobsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobRes>;
    /**
     * Retrieves a list of pending jobs for the authenticated agent
     * Get pending jobs
     */
    jobsPendingGetRaw(requestParameters: JobsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<JobRes>>>;
    /**
     * Retrieves a list of pending jobs for the authenticated agent
     * Get pending jobs
     */
    jobsPendingGet(requestParameters?: JobsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<JobRes>>;
}
