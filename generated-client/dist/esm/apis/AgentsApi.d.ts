/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AgentCreateRes, AgentReq, AgentRes, AgentTypeRes, AgentTypesGet200Response, AgentsGet200Response, AgentsMeStatusPutRequest } from '../models/index';
export interface AgentTypesGetRequest {
    page?: number;
    pageSize?: number;
}
export interface AgentTypesIdGetRequest {
    id: string;
}
export interface AgentsGetRequest {
    page?: number;
    pageSize?: number;
}
export interface AgentsIdDeleteRequest {
    id: string;
}
export interface AgentsIdGetRequest {
    id: string;
}
export interface AgentsIdPatchRequest {
    id: string;
    agentReq: AgentReq;
}
export interface AgentsMeStatusPutOperationRequest {
    agentsMeStatusPutRequest: AgentsMeStatusPutRequest;
}
export interface AgentsPostRequest {
    agentReq: AgentReq;
}
/**
 * AgentsApi - interface
 *
 * @export
 * @interface AgentsApiInterface
 */
export interface AgentsApiInterface {
    /**
     * Retrieves a paginated list of agent types
     * @summary List agent types
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentTypesGetRaw(requestParameters: AgentTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentTypesGet200Response>>;
    /**
     * Retrieves a paginated list of agent types
     * List agent types
     */
    agentTypesGet(requestParameters: AgentTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentTypesGet200Response>;
    /**
     * Retrieves a specific agent type by ID
     * @summary Get an agent type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentTypesIdGetRaw(requestParameters: AgentTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentTypeRes>>;
    /**
     * Retrieves a specific agent type by ID
     * Get an agent type
     */
    agentTypesIdGet(requestParameters: AgentTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentTypeRes>;
    /**
     * Retrieves a paginated list of agents
     * @summary List agents
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsGetRaw(requestParameters: AgentsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentsGet200Response>>;
    /**
     * Retrieves a paginated list of agents
     * List agents
     */
    agentsGet(requestParameters: AgentsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentsGet200Response>;
    /**
     * Deletes an agent by ID
     * @summary Delete an agent
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsIdDeleteRaw(requestParameters: AgentsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes an agent by ID
     * Delete an agent
     */
    agentsIdDelete(requestParameters: AgentsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific agent by ID
     * @summary Get an agent
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsIdGetRaw(requestParameters: AgentsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Retrieves a specific agent by ID
     * Get an agent
     */
    agentsIdGet(requestParameters: AgentsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Updates an existing agent
     * @summary Update an agent
     * @param {string} id
     * @param {AgentReq} agentReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsIdPatchRaw(requestParameters: AgentsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Updates an existing agent
     * Update an agent
     */
    agentsIdPatch(requestParameters: AgentsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Retrieves information about the currently authenticated agent
     * @summary Get current agent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsMeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Retrieves information about the currently authenticated agent
     * Get current agent
     */
    agentsMeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Updates the status of the authenticated agent
     * @summary Update agent status
     * @param {AgentsMeStatusPutRequest} agentsMeStatusPutRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsMeStatusPutRaw(requestParameters: AgentsMeStatusPutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Updates the status of the authenticated agent
     * Update agent status
     */
    agentsMeStatusPut(requestParameters: AgentsMeStatusPutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Creates a new agent and returns the agent data with an authentication token
     * @summary Create an agent
     * @param {AgentReq} agentReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApiInterface
     */
    agentsPostRaw(requestParameters: AgentsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentCreateRes>>;
    /**
     * Creates a new agent and returns the agent data with an authentication token
     * Create an agent
     */
    agentsPost(requestParameters: AgentsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentCreateRes>;
}
/**
 *
 */
export declare class AgentsApi extends runtime.BaseAPI implements AgentsApiInterface {
    /**
     * Retrieves a paginated list of agent types
     * List agent types
     */
    agentTypesGetRaw(requestParameters: AgentTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentTypesGet200Response>>;
    /**
     * Retrieves a paginated list of agent types
     * List agent types
     */
    agentTypesGet(requestParameters?: AgentTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentTypesGet200Response>;
    /**
     * Retrieves a specific agent type by ID
     * Get an agent type
     */
    agentTypesIdGetRaw(requestParameters: AgentTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentTypeRes>>;
    /**
     * Retrieves a specific agent type by ID
     * Get an agent type
     */
    agentTypesIdGet(requestParameters: AgentTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentTypeRes>;
    /**
     * Retrieves a paginated list of agents
     * List agents
     */
    agentsGetRaw(requestParameters: AgentsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentsGet200Response>>;
    /**
     * Retrieves a paginated list of agents
     * List agents
     */
    agentsGet(requestParameters?: AgentsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentsGet200Response>;
    /**
     * Deletes an agent by ID
     * Delete an agent
     */
    agentsIdDeleteRaw(requestParameters: AgentsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes an agent by ID
     * Delete an agent
     */
    agentsIdDelete(requestParameters: AgentsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific agent by ID
     * Get an agent
     */
    agentsIdGetRaw(requestParameters: AgentsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Retrieves a specific agent by ID
     * Get an agent
     */
    agentsIdGet(requestParameters: AgentsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Updates an existing agent
     * Update an agent
     */
    agentsIdPatchRaw(requestParameters: AgentsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Updates an existing agent
     * Update an agent
     */
    agentsIdPatch(requestParameters: AgentsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Retrieves information about the currently authenticated agent
     * Get current agent
     */
    agentsMeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Retrieves information about the currently authenticated agent
     * Get current agent
     */
    agentsMeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Updates the status of the authenticated agent
     * Update agent status
     */
    agentsMeStatusPutRaw(requestParameters: AgentsMeStatusPutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentRes>>;
    /**
     * Updates the status of the authenticated agent
     * Update agent status
     */
    agentsMeStatusPut(requestParameters: AgentsMeStatusPutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentRes>;
    /**
     * Creates a new agent and returns the agent data with an authentication token
     * Create an agent
     */
    agentsPostRaw(requestParameters: AgentsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentCreateRes>>;
    /**
     * Creates a new agent and returns the agent data with an authentication token
     * Create an agent
     */
    agentsPost(requestParameters: AgentsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentCreateRes>;
}
