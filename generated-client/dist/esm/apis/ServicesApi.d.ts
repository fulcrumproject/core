/**
 * Fulcrum Core API
 * A comprehensive cloud infrastructure management system designed to orchestrate and monitor distributed cloud resources across multiple providers.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ServiceGroupReq, ServiceGroupRes, ServiceGroupsGet200Response, ServiceReq, ServiceRes, ServiceTypeRes, ServiceTypesGet200Response, ServicesGet200Response, ServicesIdPatchRequest, ValidatePropertiesReq, ValidatePropertiesRes } from '../models/index';
export interface ServiceGroupsGetRequest {
    page?: number;
    pageSize?: number;
}
export interface ServiceGroupsIdDeleteRequest {
    id: string;
}
export interface ServiceGroupsIdGetRequest {
    id: string;
}
export interface ServiceGroupsIdPatchRequest {
    id: string;
    serviceGroupReq: ServiceGroupReq;
}
export interface ServiceGroupsPostRequest {
    serviceGroupReq: ServiceGroupReq;
}
export interface ServiceTypesGetRequest {
    page?: number;
    pageSize?: number;
}
export interface ServiceTypesIdGetRequest {
    id: string;
}
export interface ServiceTypesIdValidatePostRequest {
    id: string;
    validatePropertiesReq: ValidatePropertiesReq;
}
export interface ServicesGetRequest {
    page?: number;
    pageSize?: number;
}
export interface ServicesIdDeleteRequest {
    id: string;
}
export interface ServicesIdGetRequest {
    id: string;
}
export interface ServicesIdPatchOperationRequest {
    id: string;
    servicesIdPatchRequest: ServicesIdPatchRequest;
}
export interface ServicesIdRetryPostRequest {
    id: string;
}
export interface ServicesIdStartPostRequest {
    id: string;
}
export interface ServicesIdStopPostRequest {
    id: string;
}
export interface ServicesPostRequest {
    serviceReq: ServiceReq;
}
/**
 * ServicesApi - interface
 *
 * @export
 * @interface ServicesApiInterface
 */
export interface ServicesApiInterface {
    /**
     * Retrieves a paginated list of service groups
     * @summary List service groups
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceGroupsGetRaw(requestParameters: ServiceGroupsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupsGet200Response>>;
    /**
     * Retrieves a paginated list of service groups
     * List service groups
     */
    serviceGroupsGet(requestParameters: ServiceGroupsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupsGet200Response>;
    /**
     * Deletes a service group by ID
     * @summary Delete a service group
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceGroupsIdDeleteRaw(requestParameters: ServiceGroupsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a service group by ID
     * Delete a service group
     */
    serviceGroupsIdDelete(requestParameters: ServiceGroupsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific service group by ID
     * @summary Get a service group
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceGroupsIdGetRaw(requestParameters: ServiceGroupsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupRes>>;
    /**
     * Retrieves a specific service group by ID
     * Get a service group
     */
    serviceGroupsIdGet(requestParameters: ServiceGroupsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupRes>;
    /**
     * Updates an existing service group
     * @summary Update a service group
     * @param {string} id
     * @param {ServiceGroupReq} serviceGroupReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceGroupsIdPatchRaw(requestParameters: ServiceGroupsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupRes>>;
    /**
     * Updates an existing service group
     * Update a service group
     */
    serviceGroupsIdPatch(requestParameters: ServiceGroupsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupRes>;
    /**
     * Creates a new service group
     * @summary Create a service group
     * @param {ServiceGroupReq} serviceGroupReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceGroupsPostRaw(requestParameters: ServiceGroupsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupRes>>;
    /**
     * Creates a new service group
     * Create a service group
     */
    serviceGroupsPost(requestParameters: ServiceGroupsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupRes>;
    /**
     * Retrieves a paginated list of service types
     * @summary List service types
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceTypesGetRaw(requestParameters: ServiceTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceTypesGet200Response>>;
    /**
     * Retrieves a paginated list of service types
     * List service types
     */
    serviceTypesGet(requestParameters: ServiceTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceTypesGet200Response>;
    /**
     * Retrieves a specific service type by ID
     * @summary Get a service type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceTypesIdGetRaw(requestParameters: ServiceTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceTypeRes>>;
    /**
     * Retrieves a specific service type by ID
     * Get a service type
     */
    serviceTypesIdGet(requestParameters: ServiceTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceTypeRes>;
    /**
     * Validates service properties against the service type\'s property schema
     * @summary Validate service properties
     * @param {string} id
     * @param {ValidatePropertiesReq} validatePropertiesReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    serviceTypesIdValidatePostRaw(requestParameters: ServiceTypesIdValidatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ValidatePropertiesRes>>;
    /**
     * Validates service properties against the service type\'s property schema
     * Validate service properties
     */
    serviceTypesIdValidatePost(requestParameters: ServiceTypesIdValidatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ValidatePropertiesRes>;
    /**
     * Retrieves a paginated list of services
     * @summary List services
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesGetRaw(requestParameters: ServicesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServicesGet200Response>>;
    /**
     * Retrieves a paginated list of services
     * List services
     */
    servicesGet(requestParameters: ServicesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServicesGet200Response>;
    /**
     * Deletes a service by ID
     * @summary Delete a service
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesIdDeleteRaw(requestParameters: ServicesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a service by ID
     * Delete a service
     */
    servicesIdDelete(requestParameters: ServicesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific service by ID
     * @summary Get a service
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesIdGetRaw(requestParameters: ServicesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceRes>>;
    /**
     * Retrieves a specific service by ID
     * Get a service
     */
    servicesIdGet(requestParameters: ServicesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceRes>;
    /**
     * Updates an existing service
     * @summary Update a service
     * @param {string} id
     * @param {ServicesIdPatchRequest} servicesIdPatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesIdPatchRaw(requestParameters: ServicesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceRes>>;
    /**
     * Updates an existing service
     * Update a service
     */
    servicesIdPatch(requestParameters: ServicesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceRes>;
    /**
     * Retries the last failed operation on a service
     * @summary Retry a failed service operation
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesIdRetryPostRaw(requestParameters: ServicesIdRetryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Retries the last failed operation on a service
     * Retry a failed service operation
     */
    servicesIdRetryPost(requestParameters: ServicesIdRetryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Starts a service by ID
     * @summary Start a service
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesIdStartPostRaw(requestParameters: ServicesIdStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Starts a service by ID
     * Start a service
     */
    servicesIdStartPost(requestParameters: ServicesIdStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Stops a service by ID
     * @summary Stop a service
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesIdStopPostRaw(requestParameters: ServicesIdStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Stops a service by ID
     * Stop a service
     */
    servicesIdStopPost(requestParameters: ServicesIdStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Creates a new service
     * @summary Create a service
     * @param {ServiceReq} serviceReq
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApiInterface
     */
    servicesPostRaw(requestParameters: ServicesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceRes>>;
    /**
     * Creates a new service
     * Create a service
     */
    servicesPost(requestParameters: ServicesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceRes>;
}
/**
 *
 */
export declare class ServicesApi extends runtime.BaseAPI implements ServicesApiInterface {
    /**
     * Retrieves a paginated list of service groups
     * List service groups
     */
    serviceGroupsGetRaw(requestParameters: ServiceGroupsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupsGet200Response>>;
    /**
     * Retrieves a paginated list of service groups
     * List service groups
     */
    serviceGroupsGet(requestParameters?: ServiceGroupsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupsGet200Response>;
    /**
     * Deletes a service group by ID
     * Delete a service group
     */
    serviceGroupsIdDeleteRaw(requestParameters: ServiceGroupsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a service group by ID
     * Delete a service group
     */
    serviceGroupsIdDelete(requestParameters: ServiceGroupsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific service group by ID
     * Get a service group
     */
    serviceGroupsIdGetRaw(requestParameters: ServiceGroupsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupRes>>;
    /**
     * Retrieves a specific service group by ID
     * Get a service group
     */
    serviceGroupsIdGet(requestParameters: ServiceGroupsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupRes>;
    /**
     * Updates an existing service group
     * Update a service group
     */
    serviceGroupsIdPatchRaw(requestParameters: ServiceGroupsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupRes>>;
    /**
     * Updates an existing service group
     * Update a service group
     */
    serviceGroupsIdPatch(requestParameters: ServiceGroupsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupRes>;
    /**
     * Creates a new service group
     * Create a service group
     */
    serviceGroupsPostRaw(requestParameters: ServiceGroupsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceGroupRes>>;
    /**
     * Creates a new service group
     * Create a service group
     */
    serviceGroupsPost(requestParameters: ServiceGroupsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceGroupRes>;
    /**
     * Retrieves a paginated list of service types
     * List service types
     */
    serviceTypesGetRaw(requestParameters: ServiceTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceTypesGet200Response>>;
    /**
     * Retrieves a paginated list of service types
     * List service types
     */
    serviceTypesGet(requestParameters?: ServiceTypesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceTypesGet200Response>;
    /**
     * Retrieves a specific service type by ID
     * Get a service type
     */
    serviceTypesIdGetRaw(requestParameters: ServiceTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceTypeRes>>;
    /**
     * Retrieves a specific service type by ID
     * Get a service type
     */
    serviceTypesIdGet(requestParameters: ServiceTypesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceTypeRes>;
    /**
     * Validates service properties against the service type\'s property schema
     * Validate service properties
     */
    serviceTypesIdValidatePostRaw(requestParameters: ServiceTypesIdValidatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ValidatePropertiesRes>>;
    /**
     * Validates service properties against the service type\'s property schema
     * Validate service properties
     */
    serviceTypesIdValidatePost(requestParameters: ServiceTypesIdValidatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ValidatePropertiesRes>;
    /**
     * Retrieves a paginated list of services
     * List services
     */
    servicesGetRaw(requestParameters: ServicesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServicesGet200Response>>;
    /**
     * Retrieves a paginated list of services
     * List services
     */
    servicesGet(requestParameters?: ServicesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServicesGet200Response>;
    /**
     * Deletes a service by ID
     * Delete a service
     */
    servicesIdDeleteRaw(requestParameters: ServicesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a service by ID
     * Delete a service
     */
    servicesIdDelete(requestParameters: ServicesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves a specific service by ID
     * Get a service
     */
    servicesIdGetRaw(requestParameters: ServicesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceRes>>;
    /**
     * Retrieves a specific service by ID
     * Get a service
     */
    servicesIdGet(requestParameters: ServicesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceRes>;
    /**
     * Updates an existing service
     * Update a service
     */
    servicesIdPatchRaw(requestParameters: ServicesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceRes>>;
    /**
     * Updates an existing service
     * Update a service
     */
    servicesIdPatch(requestParameters: ServicesIdPatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceRes>;
    /**
     * Retries the last failed operation on a service
     * Retry a failed service operation
     */
    servicesIdRetryPostRaw(requestParameters: ServicesIdRetryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Retries the last failed operation on a service
     * Retry a failed service operation
     */
    servicesIdRetryPost(requestParameters: ServicesIdRetryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Starts a service by ID
     * Start a service
     */
    servicesIdStartPostRaw(requestParameters: ServicesIdStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Starts a service by ID
     * Start a service
     */
    servicesIdStartPost(requestParameters: ServicesIdStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Stops a service by ID
     * Stop a service
     */
    servicesIdStopPostRaw(requestParameters: ServicesIdStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Stops a service by ID
     * Stop a service
     */
    servicesIdStopPost(requestParameters: ServicesIdStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Creates a new service
     * Create a service
     */
    servicesPostRaw(requestParameters: ServicesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceRes>>;
    /**
     * Creates a new service
     * Create a service
     */
    servicesPost(requestParameters: ServicesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceRes>;
}
