### Test Provider API

### Variables
@baseUrl = http://localhost:3000/api/v1

### Create a new provider
# @name createProvider
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "AWS",
    "state": "Enabled",
    "countryCode": "US",
    "attributes": {
        "regions": ["us-east-1", "us-west-2"],
        "tier": ["enterprise"]
    }
}

### Extract provider ID

@providerId = {{createProvider.response.body.$.id}}

### Get a provider by ID
GET {{baseUrl}}/providers/{{providerId}}

### List all providers
GET {{baseUrl}}/providers

### Update a provider
PUT {{baseUrl}}/providers/{{providerId}}
Content-Type: application/json

{
    "name": "AWS Updated",
    "state": "Enabled",
    "countryCode": "US",
    "attributes": {
        "regions": ["us-east-1", "us-west-2", "eu-west-1"],
        "tier": ["enterprise", "premium"]
    }
}

### Delete a provider
DELETE {{baseUrl}}/providers/{{providerId}}

### Create a provider with invalid state (should fail)
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "Invalid Provider",
    "state": "InvalidState",
    "countryCode": "US"
}

### Create a provider with invalid country code (should fail)
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "Invalid Provider",
    "state": "Enabled",
    "countryCode": "USA"
}

### Create a provider with empty name (should fail)
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "",
    "state": "Enabled",
    "countryCode": "US"
}

### Create a provider with invalid attributes (should fail)
POST {{baseUrl}}/providers
Content-Type: application/json

{
    "name": "Invalid Provider",
    "state": "Enabled",
    "countryCode": "US",
    "attributes": {
        "empty_array": [],
        "empty_value": [""]
    }
}
